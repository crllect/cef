diff --git ui/views/controls/webview/webview.cc ui/views/controls/webview/webview.cc
index 112c061004744..ee0ea41872823 100644
--- ui/views/controls/webview/webview.cc
+++ ui/views/controls/webview/webview.cc
@@ -159,6 +159,10 @@ void WebView::EnableSizingFromWebContents(const gfx::Size& min_size,
   }
 }
 
+void WebView::SetResizeBackgroundColor(SkColor resize_background_color) {
+  holder_->SetBackgroundColorWhenClipped(resize_background_color);
+}
+
 void WebView::SetCrashedOverlayView(View* crashed_overlay_view) {
   if (crashed_overlay_view_.view() == crashed_overlay_view) {
     return;
diff --git ui/views/controls/webview/webview.h ui/views/controls/webview/webview.h
index 88692c0a858bf..7c277c4bbab11 100644
--- ui/views/controls/webview/webview.h
+++ ui/views/controls/webview/webview.h
@@ -93,6 +93,10 @@ class WEBVIEW_EXPORT WebView : public View,
   void EnableSizingFromWebContents(const gfx::Size& min_size,
                                    const gfx::Size& max_size);
 
+  // Set the background color to use while resizing with a clip. This is white
+  // by default.
+  void SetResizeBackgroundColor(SkColor resize_background_color);
+
   // If provided, this View will be shown in place of the web contents
   // when the web contents is in a crashed state. This is cleared automatically
   // if the web contents is changed. The passed-in overlay view must be owned by
